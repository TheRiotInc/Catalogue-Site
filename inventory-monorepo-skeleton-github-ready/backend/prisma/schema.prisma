
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  name       String?
  password   String
  role       Role      @default(STAFF)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum Role { ADMIN MANAGER STAFF AUDITOR }

model Location {
  id           String     @id @default(uuid())
  name         String
  type         String
  address      String?
  createdAt    DateTime   @default(now())
  inventory    Inventory[]
}

model Product {
  id           String       @id @default(uuid())
  sku          String       @unique
  name         String
  description  String?
  unit         String
  tags         String[]     @default([])
  barcode      String?      @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  threshold    Int?
  supplierId   String?
  supplier     Supplier?    @relation(fields: [supplierId], references: [id])
  batches      Batch[]
}

model Batch {
  id             String    @id @default(uuid())
  product        Product   @relation(fields: [productId], references: [id])
  productId      String
  batchNumber    String
  serialNumber   String?
  qty            Int
  manufactureAt  DateTime?
  expiryAt       DateTime?
  createdAt      DateTime  @default(now())
  locationId     String?
}

model Inventory {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  location   Location @relation(fields: [locationId], references: [id])
  locationId String
  qty        Int
  reserved   Int      @default(0)
  updatedAt  DateTime @updatedAt
}

model Supplier {
  id         String   @id @default(uuid())
  name       String
  contact    String?
  email      String?
  phone      String?
  leadTimeDays Int?
  notes      String?
  products   Product[]
}

model PurchaseOrder {
  id           String    @id @default(uuid())
  supplier     Supplier  @relation(fields: [supplierId], references: [id])
  supplierId   String
  createdById  String
  status       POStatus  @default(PENDING)
  totalQty     Int
  expectedAt   DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum POStatus { PENDING ORDERED RECEIVED CANCELLED }
